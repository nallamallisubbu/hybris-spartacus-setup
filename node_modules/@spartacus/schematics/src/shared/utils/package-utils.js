"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const schematics_1 = require("@angular-devkit/schematics");
const constants_1 = require("../constants");
const package_json_1 = require("./../../../package.json");
function getAngularVersion(tree, useFallback = true) {
    const buffer = tree.read('package.json');
    let packageJsonVersion = '';
    if (buffer) {
        const packageJson = JSON.parse(buffer.toString(constants_1.UTF_8));
        packageJsonVersion = packageJson.dependencies[constants_1.ANGULAR_CORE];
    }
    return packageJsonVersion || (useFallback ? constants_1.DEFAULT_ANGULAR_VERSION : '');
}
exports.getAngularVersion = getAngularVersion;
function getMajorVersionNumber(versionString) {
    if (!versionString) {
        throw new Error('versionString is undefined.');
    }
    let majorVersion = versionString.charAt(0);
    if (isNaN(Number(majorVersion))) {
        majorVersion = versionString.charAt(1);
    }
    return Number(majorVersion);
}
exports.getMajorVersionNumber = getMajorVersionNumber;
function getSpartacusSchematicsVersion() {
    return package_json_1.version;
}
exports.getSpartacusSchematicsVersion = getSpartacusSchematicsVersion;
function getSpartacusCurrentFeatureLevel() {
    return package_json_1.version.split('.').slice(0, 2).join('.');
}
exports.getSpartacusCurrentFeatureLevel = getSpartacusCurrentFeatureLevel;
function isAngularLocalizeInstalled(tree) {
    const pkgPath = '/package.json';
    const buffer = tree.read(pkgPath);
    if (!buffer) {
        throw new schematics_1.SchematicsException('Could not find package.json');
    }
    const packageJsonObject = JSON.parse(buffer.toString(constants_1.UTF_8));
    return packageJsonObject.dependencies.hasOwnProperty(constants_1.ANGULAR_LOCALIZE);
}
exports.isAngularLocalizeInstalled = isAngularLocalizeInstalled;
//# sourceMappingURL=package-utils.js.map