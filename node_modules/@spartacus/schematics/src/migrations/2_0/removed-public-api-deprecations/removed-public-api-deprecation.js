"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const constants_1 = require("../../../shared/constants");
const file_utils_1 = require("../../../shared/utils/file-utils");
const workspace_utils_1 = require("../../../shared/utils/workspace-utils");
const removed_public_api_deprecation_data_1 = require("./removed-public-api-deprecation-data");
function migrate() {
    return (tree, context) => {
        var _a;
        context.logger.info('Checking removed public api...');
        const project = workspace_utils_1.getSourceRoot(tree, {});
        const sourceFiles = file_utils_1.getAllTsSourceFiles(tree, project);
        for (const originalSource of sourceFiles) {
            const sourcePath = originalSource.fileName;
            for (const removedNode of removed_public_api_deprecation_data_1.REMOVED_PUBLIC_API_DATA) {
                // 'source' has to be reloaded after each committed change
                const source = file_utils_1.getTsSourceFile(tree, sourcePath);
                const changes = file_utils_1.insertCommentAboveImportIdentifier(sourcePath, source, removedNode.node, removedNode.importPath, buildComment((_a = removedNode.comment) !== null && _a !== void 0 ? _a : `'${removedNode.node}' is no longer part of the public API. Please look into migration guide for more information`));
                file_utils_1.commitChanges(tree, sourcePath, changes, file_utils_1.InsertDirection.RIGHT);
            }
        }
        return tree;
    };
}
exports.migrate = migrate;
function buildComment(content) {
    return `// ${constants_1.TODO_SPARTACUS} ${content}\n`;
}
//# sourceMappingURL=removed-public-api-deprecation.js.map