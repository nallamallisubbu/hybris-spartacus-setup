{"version":3,"file":"cms-components.service.d.ts","sources":["cms-components.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { CmsComponentMapping, CmsConfig, DeferLoadingStrategy } from '@spartacus/core';\r\nimport { Route } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nexport declare class CmsComponentsService {\r\n    protected config: CmsConfig;\r\n    protected platformId: Object;\r\n    private missingComponents;\r\n    constructor(config: CmsConfig, platformId: Object);\r\n    /**\r\n     * Should be called to make sure all component mappings are determined,\r\n     * especially lazy loaded ones.\r\n     *\r\n     * It's recommended way to make sure all other methods of CmsComponentService\r\n     * will be able to work synchronously for asked component types and avoid risk\r\n     * of potential errors that could be thrown otherwise.\r\n     */\r\n    determineMappings(componentTypes: string[]): Observable<string[]>;\r\n    /**\r\n     * Return collection of component mapping configuration for specified list of\r\n     * component types.\r\n     *\r\n     * If component mapping can't be determined synchronously, for example, lazy\r\n     * loaded one, it will throw an error.\r\n     *\r\n     * To make sure component mapping is available, determineMappings()\r\n     * should be called and completed first.\r\n     */\r\n    getMapping(componentType: string): CmsComponentMapping;\r\n    /**\r\n     * Checks, if component should be rendered as some components\r\n     * could be disabled for server side renderings\r\n     */\r\n    shouldRender(componentType: string): boolean;\r\n    /**\r\n     * Return DeferLoadingStrategy for component type.\r\n     */\r\n    getDeferLoadingStrategy(componentType: string): DeferLoadingStrategy;\r\n    /**\r\n     * Get cms driven child routes for components\r\n     */\r\n    getChildRoutes(componentTypes: string[]): Route[];\r\n    /**\r\n     * Get cms driven guards for components\r\n     */\r\n    getGuards(componentTypes: string[]): any[];\r\n    /**\r\n     * Get i18n keys associated with components\r\n     */\r\n    getI18nKeys(componentTypes: string[]): string[];\r\n}\r\n"]}