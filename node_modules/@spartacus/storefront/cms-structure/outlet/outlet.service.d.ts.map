{"version":3,"file":"outlet.service.d.ts","sources":["outlet.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { TemplateRef } from '@angular/core';\r\nimport { OutletPosition } from './outlet.model';\r\nexport declare class OutletService<T = TemplateRef<any>> {\r\n    private templatesRefs;\r\n    private templatesRefsBefore;\r\n    private templatesRefsAfter;\r\n    /**\r\n     * Adds a template or ComponentFactory, so that UI outlets can be replaced dynamically.\r\n     * The UI position where this template or ComponentFactory is inserted is given by a\r\n     * string reference (called `outlet`) and optional `OutletPosition`. The `OutletPosition`\r\n     * is either before or after, or replaces the entire UI.\r\n     *\r\n     * @param outlet the UI location represented by a string\r\n     * @param template the `TemplateRef` that will be used to insert UI\r\n     * @param position the `OutletPosition` in the UI\r\n     */\r\n    add(outlet: string, template: T, position?: OutletPosition): void;\r\n    /**\r\n     * @param factory The `ComponentFactory` that will be dynamically added to the outlet UI\r\n     */\r\n    add(outlet: string, factory: T, position?: OutletPosition): void;\r\n    /**\r\n     *\r\n     * Returns a single object or multiple objects for the given outlet reference,\r\n     * depending on the `stacked` argument.\r\n     *\r\n     * @param outlet The outlet reference\r\n     * @param position the outlet position, `OutletPosition.before`, `OutletPosition.AFTER` or `OutletPosition.REPLACE`\r\n     * @param stacked Indicates whether an array of outlet components is returned\r\n     */\r\n    get(outlet: string, position?: OutletPosition, stacked?: boolean): T[] | T;\r\n    remove(outlet: string, position?: OutletPosition, value?: T): void;\r\n    private store;\r\n    protected removeValueOrAll(store: Map<string, T[]>, outlet: string, value?: T): void;\r\n}\r\n"]}