{"version":3,"file":"page-slot.component.d.ts","sources":["page-slot.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport { CmsService, ContentSlotComponentData, ContentSlotData, DynamicAttributeService } from '@spartacus/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { IntersectionOptions } from '../../../layout/loading/intersection.model';\r\nimport { CmsComponentsService } from '../../services/cms-components.service';\r\n/**\r\n * The `PageSlotComponent` is used to render the CMS page slot and it's components.\r\n *\r\n * The Page slot host element will be supplemented with css classes so that the layout\r\n * can be fully controlled by customers:\r\n * - The page slot _position_ is added as a css class by default.\r\n * - The `cx-pending` is added for as long as the slot hasn't start loading.\r\n * - The `page-fold` style class is added for the page slot which is configured as the page fold.\r\n */\r\nexport declare class PageSlotComponent implements OnInit, OnDestroy {\r\n    protected cmsService: CmsService;\r\n    protected dynamicAttributeService: DynamicAttributeService;\r\n    protected renderer: Renderer2;\r\n    protected elementRef: ElementRef;\r\n    protected cmsComponentsService: CmsComponentsService;\r\n    protected cd: ChangeDetectorRef;\r\n    /**\r\n     * The position represents the unique key for a page slot on a single page, but can\r\n     * be reused cross pages.\r\n     *\r\n     * The position is used to find the CMS components for the page slot. It is also\r\n     * added as an additional CSS class so that layoutt can be applied.\r\n     */\r\n    set position(value: string);\r\n    get position(): string;\r\n    /**\r\n     * Maintains css classes introduced by the host and adds additional classes.\r\n     */\r\n    class: string;\r\n    /**\r\n     * Indicates that the page slot is the last page slot above the fold.\r\n     */\r\n    isPageFold: boolean;\r\n    /**\r\n     * Indicates that the components of the page slot haven't been loaded as long\r\n     * as the isPending state is true.\r\n     */\r\n    isPending: boolean;\r\n    /**\r\n     * Indicates that the page slot doesn't contain any components. This is no\r\n     * longer used in spartacus, but kept for backwards compatibility.\r\n     */\r\n    hasComponents: boolean;\r\n    protected position$: BehaviorSubject<string>;\r\n    components: ContentSlotComponentData[];\r\n    protected slot$: Observable<ContentSlotData>;\r\n    /** Observes the components for the given page slot. */\r\n    components$: Observable<ContentSlotComponentData[]>;\r\n    protected subscription: Subscription;\r\n    /** Keeps track of the pending components that must be loaded for the page slot */\r\n    private pendingComponentCount;\r\n    /** Tracks the last used position, in case the page slot is used dynamically */\r\n    private lastPosition;\r\n    constructor(cmsService: CmsService, dynamicAttributeService: DynamicAttributeService, renderer: Renderer2, elementRef: ElementRef, cmsComponentsService: CmsComponentsService, cd: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    protected decorate(slot: ContentSlotData): void;\r\n    /**\r\n     * Sets the pending count for the page slot components. Once all pending components are\r\n     * loaded, the `isPending` flag is updated, so that the associated class can be updated\r\n     */\r\n    protected set pending(count: number);\r\n    protected get pending(): number;\r\n    isLoaded(loadState: boolean): void;\r\n    /**\r\n     * The `DeferLoadingStrategy` indicates whether the component should be\r\n     * rendered instantly or whether it should be deferred.\r\n     */\r\n    getComponentDeferOptions(componentType: string): IntersectionOptions;\r\n    protected isDistinct(old: ContentSlotData, current: ContentSlotData): boolean;\r\n    private addSmartEditSlotClass;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}