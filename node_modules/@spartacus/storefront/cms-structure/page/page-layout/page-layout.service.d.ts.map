{"version":3,"file":"page-layout.service.d.ts","sources":["page-layout.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { CmsService, Page } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\r\nimport { BREAKPOINT, LayoutConfig, LayoutSlotConfig, SlotConfig } from '../../../layout/config/layout-config';\r\nimport { PageLayoutHandler } from './page-layout-handler';\r\nexport declare class PageLayoutService {\r\n    private cms;\r\n    private config;\r\n    private breakpointService;\r\n    private handlers;\r\n    constructor(cms: CmsService, config: LayoutConfig, breakpointService: BreakpointService, handlers: PageLayoutHandler[]);\r\n    private warnLogMessages;\r\n    private logSlots;\r\n    getSlots(section?: string): Observable<string[]>;\r\n    /**\r\n     * Returns an observable with the last page slot above-the-fold\r\n     * for the given pageTemplate / breakpoint.\r\n     *\r\n     * The page fold is configurable in the `LayoutConfig` for each page layout.\r\n     */\r\n    getPageFoldSlot(pageTemplate: string): Observable<string>;\r\n    private resolveSlots;\r\n    get page$(): Observable<Page>;\r\n    get templateName$(): Observable<string>;\r\n    /**\r\n     * load slots from the layout configuration. The breakpoint is used\r\n     * to load a specific configuration for the given breakpoint. If there's\r\n     * no configuration available for the given breakpoint the default slot\r\n     * configuration is returned.\r\n     */\r\n    protected getSlotConfig(templateUid: string, configAttribute: string, section?: string, breakpoint?: BREAKPOINT): SlotConfig;\r\n    protected getSlotConfigForSection(templateUid: string, configAttribute: string, section?: string, breakpoint?: BREAKPOINT): SlotConfig;\r\n    /**\r\n     * Returns a list of slots for a breakpoint specific configuratoin\r\n     * If there's no specific configuration for the breakpoint,\r\n     * the closest available configuration will be returned.\r\n     */\r\n    protected getResponsiveSlotConfig(layoutSlotConfig: LayoutSlotConfig, configAttribute: string, breakpoint?: BREAKPOINT): SlotConfig;\r\n    /**\r\n     * In order to help developers, we print some detailed log information in\r\n     * case there's no layout configuration available for the given page template\r\n     * or section. Additionally, the slot positions are printed in the console\r\n     * in a format that can be copied / paste to the configuration.\r\n     */\r\n    private logMissingLayoutConfig;\r\n}\r\n"]}