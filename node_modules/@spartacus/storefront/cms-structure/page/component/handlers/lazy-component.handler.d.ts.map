{"version":3,"file":"lazy-component.handler.d.ts","sources":["lazy-component.handler.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { ComponentRef, ElementRef, Injector, ViewContainerRef } from '@angular/core';\r\nimport { CmsComponentMapping, Priority } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { DefaultComponentHandler } from './default-component.handler';\r\nimport { ComponentHandler } from './component-handler';\r\n/**\r\n * Lazy component handler used for launching lazy loaded cms components implemented\r\n * as native Angular components.\r\n */\r\nexport declare class LazyComponentHandler implements ComponentHandler {\r\n    protected defaultHandler: DefaultComponentHandler;\r\n    constructor(defaultHandler: DefaultComponentHandler);\r\n    /**\r\n     * We want to mach dynamic import signature () => import('')\r\n     */\r\n    hasMatch(componentMapping: CmsComponentMapping): boolean;\r\n    private isNotClass;\r\n    getPriority(): Priority;\r\n    launcher(componentMapping: CmsComponentMapping, viewContainerRef: ViewContainerRef, elementInjector?: Injector): Observable<{\r\n        elementRef: ElementRef;\r\n        componentRef?: ComponentRef<any>;\r\n    }>;\r\n}\r\n"]}