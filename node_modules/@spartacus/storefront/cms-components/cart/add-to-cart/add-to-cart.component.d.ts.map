{"version":3,"file":"add-to-cart.component.d.ts","sources":["add-to-cart.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ActiveCartService, OrderEntry, Product } from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { ModalRef } from '../../../shared/components/modal/modal-ref';\r\nimport { ModalService } from '../../../shared/components/modal/modal.service';\r\nimport { CurrentProductService } from '../../product/current-product.service';\r\nexport declare class AddToCartComponent implements OnInit, OnDestroy {\r\n    protected modalService: ModalService;\r\n    protected currentProductService: CurrentProductService;\r\n    private cd;\r\n    protected activeCartService: ActiveCartService;\r\n    productCode: string;\r\n    showQuantity: boolean;\r\n    /**\r\n     * As long as we do not support #5026, we require product input, as we need\r\n     *  a reference to the product model to fetch the stock data.\r\n     */\r\n    product: Product;\r\n    maxQuantity: number;\r\n    modalRef: ModalRef;\r\n    hasStock: boolean;\r\n    quantity: number;\r\n    increment: boolean;\r\n    cartEntry$: Observable<OrderEntry>;\r\n    subscription: Subscription;\r\n    addToCartForm: FormGroup;\r\n    constructor(modalService: ModalService, currentProductService: CurrentProductService, cd: ChangeDetectorRef, activeCartService: ActiveCartService);\r\n    ngOnInit(): void;\r\n    private setStockInfo;\r\n    updateCount(value: number): void;\r\n    addToCart(): void;\r\n    private openModal;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}