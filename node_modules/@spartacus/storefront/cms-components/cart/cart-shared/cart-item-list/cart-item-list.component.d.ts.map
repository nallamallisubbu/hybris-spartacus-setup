{"version":3,"file":"cart-item-list.component.d.ts","sources":["cart-item-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { FormGroup } from '@angular/forms';\r\nimport { ActiveCartService, PromotionLocation, SelectiveCartService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CartItemComponentOptions, Item } from '../cart-item/cart-item.component';\r\nexport declare class CartItemListComponent {\r\n    protected activeCartService: ActiveCartService;\r\n    protected selectiveCartService: SelectiveCartService;\r\n    readonly: boolean;\r\n    hasHeader: boolean;\r\n    options: CartItemComponentOptions;\r\n    private _items;\r\n    form: FormGroup;\r\n    set items(items: Item[]);\r\n    get items(): Item[];\r\n    promotionLocation: PromotionLocation;\r\n    set setLoading(value: boolean);\r\n    constructor(activeCartService: ActiveCartService, selectiveCartService: SelectiveCartService);\r\n    /**\r\n     * The items we're getting form the input do not have a consistent model.\r\n     * In case of a `consignmentEntry`, we need to normalize the data from the orderEntry.\r\n     */\r\n    private resolveItems;\r\n    private createForm;\r\n    removeEntry(item: Item): void;\r\n    getControl(item: Item): Observable<FormGroup>;\r\n}\r\n"]}