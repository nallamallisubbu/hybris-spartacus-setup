{"version":3,"file":"asm-enabler.service.d.ts","sources":["asm-enabler.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Location } from '@angular/common';\r\nimport { WindowRef } from '@spartacus/core';\r\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\r\n/**\r\n * The AsmEnablerService is used to enable ASM for those scenario's\r\n * where it's actually used. This service is added to avoid any polution\r\n * of the UI and runtime performance for the ordinary production user.\r\n */\r\nexport declare class AsmEnablerService {\r\n    protected location: Location;\r\n    protected winRef: WindowRef;\r\n    protected launchDialogService: LaunchDialogService;\r\n    constructor(location: Location, winRef: WindowRef, launchDialogService: LaunchDialogService);\r\n    /**\r\n     * Loads the ASM UI if needed. The ASM UI will be added based on the\r\n     * existence of a URL parameter or previous usage given by local storage.\r\n     */\r\n    load(): void;\r\n    /**\r\n     * Indicates whether the ASM module is enabled.\r\n     */\r\n    isEnabled(): boolean;\r\n    /**\r\n     * Indicates whether ASM is launched through the URL,\r\n     * using the asm flag in the URL.\r\n     */\r\n    protected isLaunched(): boolean;\r\n    /**\r\n     * Evaluates local storage where we persist the usage of ASM.\r\n     */\r\n    protected isUsedBefore(): boolean;\r\n    /**\r\n     * Adds the ASM UI by using the `cx-storefront` outlet.\r\n     */\r\n    protected addUi(): void;\r\n}\r\n"]}