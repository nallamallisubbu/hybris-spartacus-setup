{"version":3,"file":"active-facets.component.d.ts","sources":["active-facets.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Breadcrumb } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\r\nimport { FacetList } from '../facet.model';\r\nimport { FacetService } from '../services/facet.service';\r\n/**\r\n * Active facets render the applied facet values as a list of focusable buttons\r\n * which can be used to remove the applied facet value.\r\n */\r\nexport declare class ActiveFacetsComponent {\r\n    protected facetService: FacetService;\r\n    /** Active facets which are applied to the product results. */\r\n    facetList$: Observable<FacetList>;\r\n    /** Configurable icon which is used for the active facet close button */\r\n    closeIcon: ICON_TYPE;\r\n    constructor(facetService: FacetService);\r\n    getLinkParams(facet: Breadcrumb): {\r\n        [key: string]: string;\r\n    };\r\n    /**\r\n     * The focus key is used to persist the focus on the facet when the DOM is being\r\n     * recreated. We only apply the focus key for the given _active_ facet when there\r\n     * the original facets is not available. This happens for non multi-valued facets.\r\n     *\r\n     * With this approach, the we keep the focus, either at the facet list or on the\r\n     * active facets.\r\n     */\r\n    getFocusKey(facetList: FacetList, facet: Breadcrumb): string;\r\n}\r\n"]}