{"version":3,"file":"facet.component.d.ts","sources":["facet.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, QueryList } from '@angular/core';\r\nimport { Facet, FacetValue } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\r\nimport { FocusDirective } from '../../../../../layout/a11y/keyboard-focus/focus.directive';\r\nimport { FacetCollapseState } from '../facet.model';\r\nimport { FacetService } from '../services/facet.service';\r\nexport declare class FacetComponent {\r\n    protected facetService: FacetService;\r\n    protected elementRef: ElementRef<HTMLElement>;\r\n    protected cd: ChangeDetectorRef;\r\n    protected _facet: Facet;\r\n    state$: Observable<FacetCollapseState>;\r\n    /** configurable icon that is used to collapse the facet group  */\r\n    expandIcon: ICON_TYPE;\r\n    collapseIcon: ICON_TYPE;\r\n    isMultiSelect: boolean;\r\n    values: QueryList<ElementRef<HTMLElement>>;\r\n    keyboardFocus: FocusDirective;\r\n    set facet(value: Facet);\r\n    get facet(): Facet;\r\n    constructor(facetService: FacetService, elementRef: ElementRef<HTMLElement>, cd: ChangeDetectorRef);\r\n    /**\r\n     * Handles clicking the heading of the facet group, which means toggling\r\n     * the visibility of the group (collapse / expand) and optionally focusing\r\n     * the group.\r\n     */\r\n    toggleGroup(event: UIEvent): void;\r\n    get isExpanded(): boolean;\r\n    openLink(event: KeyboardEvent): void;\r\n    /**\r\n     * Increases the number of visible values for the facet. This is delegated\r\n     * to `facetService.increaseVisibleValues`.\r\n     */\r\n    increaseVisibleValues(): void;\r\n    /**\r\n     * Decreases the number of visible values for the facet. This is delegated\r\n     * to `facetService.decreaseVisibleValues`.\r\n     */\r\n    decreaseVisibleValues(): void;\r\n    getLinkParams(value: FacetValue): {\r\n        [key: string]: string;\r\n    };\r\n}\r\n"]}