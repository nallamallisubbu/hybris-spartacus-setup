{"version":3,"file":"facet-list.component.d.ts","sources":["facet-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, Renderer2 } from '@angular/core';\r\nimport { Facet } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FocusConfig } from '../../../../../layout/a11y/keyboard-focus/index';\r\nimport { ICON_TYPE } from '../../../../misc/icon/icon.model';\r\nimport { FacetList } from '../facet.model';\r\nimport { FacetComponent } from '../facet/facet.component';\r\nimport { FacetService } from '../services/facet.service';\r\nexport declare class FacetListComponent {\r\n    protected facetService: FacetService;\r\n    protected elementRef: ElementRef;\r\n    protected renderer: Renderer2;\r\n    private _isDialog;\r\n    /**\r\n     * Indicates that the facet navigation is rendered in dialog.\r\n     */\r\n    set isDialog(value: boolean);\r\n    get isDialog(): boolean;\r\n    /** Emits when the list must close */\r\n    closeList: EventEmitter<any>;\r\n    /** The list of all facet and values related to the products in the list */\r\n    facetList$: Observable<FacetList>;\r\n    iconTypes: typeof ICON_TYPE;\r\n    dialogFocusConfig: FocusConfig;\r\n    handleClick(): void;\r\n    constructor(facetService: FacetService, elementRef: ElementRef, renderer: Renderer2);\r\n    /**\r\n     * Toggles the facet group in case it is not expanded.\r\n     */\r\n    expandFacetGroup(facet: Facet, ref: FacetComponent): void;\r\n    /**\r\n     * Indicates that the facet group has been expanded.\r\n     */\r\n    isExpanded(facet: Facet): Observable<boolean>;\r\n    /**\r\n     * Indicates that the facet group has been collapsed.\r\n     */\r\n    isCollapsed(facet: Facet): Observable<boolean>;\r\n    close(event?: boolean): void;\r\n    block(event?: MouseEvent): void;\r\n}\r\n"]}