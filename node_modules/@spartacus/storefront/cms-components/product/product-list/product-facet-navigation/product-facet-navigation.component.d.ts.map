{"version":3,"file":"product-facet-navigation.component.d.ts","sources":["product-facet-navigation.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\r\nimport { BreakpointService } from '../../../../layout/breakpoint/breakpoint.service';\r\nexport declare class ProductFacetNavigationComponent {\r\n    protected breakpointService: BreakpointService;\r\n    iconTypes: typeof ICON_TYPE;\r\n    /**\r\n     * We delay the removal of DOM so that animations can finish playing before the\r\n     * DOM is removed. Removing the DOM, as hidding is not enough to stop elements\r\n     * to be focused.\r\n     */\r\n    protected CLOSE_DELAY: number;\r\n    /**\r\n     * Used to open the facet navigation in a dialog. The usage of the dialog depends\r\n     * on the availability of the trigger element, which is driven by CSS.\r\n     *\r\n     * The reference is also used to refocus the trigger after the dialog is closed.\r\n     */\r\n    trigger: ElementRef<HTMLElement>;\r\n    protected open$: BehaviorSubject<boolean>;\r\n    /**\r\n     * Emits the open state that indicates whether the facet list should be rendered.\r\n     * This is either done instantly, or after the user triggers this by using the trigger\r\n     * button. This driven by the visiibility of the trigger, so that the CSS drives\r\n     * the behaviour. This can differ per breakpoint.\r\n     *\r\n     * There's a configurable delay for the closed state, so that the DOM is not removed\r\n     * before some CSS animations are done.\r\n     */\r\n    isOpen$: Observable<boolean>;\r\n    /**\r\n     * Emits the active state that indicates whether the facet list is activated. Activation\r\n     * is related to the css, so that a animation or transition can visualize opening/closing\r\n     * the list (i.e. dialog).\r\n     */\r\n    isActive$: Observable<boolean>;\r\n    constructor(breakpointService: BreakpointService);\r\n    launch(): void;\r\n    close(): void;\r\n    /**\r\n     * Indicates that the facet navigation should be open explicitely by a trigger.\r\n     * This is fully controlled by CSS, where the trigger button can be hidden\r\n     * (display:none) for certain screen sizes.\r\n     */\r\n    get hasTrigger(): boolean;\r\n}\r\n"]}