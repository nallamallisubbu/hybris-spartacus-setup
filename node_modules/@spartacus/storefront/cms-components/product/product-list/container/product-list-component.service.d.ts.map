{"version":3,"file":"product-list-component.service.d.ts","sources":["product-list-component.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { ActivatedRoute, Router } from '@angular/router';\r\nimport { CurrencyService, LanguageService, ProductSearchPage, ProductSearchService, RoutingService } from '@spartacus/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nexport declare class ProductListComponentService {\r\n    protected productSearchService: ProductSearchService;\r\n    protected routing: RoutingService;\r\n    protected activatedRoute: ActivatedRoute;\r\n    protected currencyService: CurrencyService;\r\n    protected languageService: LanguageService;\r\n    protected router: Router;\r\n    protected defaultPageSize: number;\r\n    protected sub: Subscription;\r\n    protected readonly RELEVANCE_ALLCATEGORIES = \":relevance:allCategories:\";\r\n    constructor(productSearchService: ProductSearchService, routing: RoutingService, activatedRoute: ActivatedRoute, currencyService: CurrencyService, languageService: LanguageService, router: Router);\r\n    private searchResults$;\r\n    private searchByRouting$;\r\n    /**\r\n     * This stream should be used only on the Product Listing Page.\r\n     *\r\n     * It not only emits search results, but also performs a search on every change\r\n     * of the route (i.e. route params or query params).\r\n     *\r\n     * When a user leaves the PLP route, the PLP component unsubscribes from this stream\r\n     * so no longer the search is performed on route change.\r\n     */\r\n    readonly model$: Observable<ProductSearchPage>;\r\n    private getCriteriaFromRoute;\r\n    private getQueryFromRouteParams;\r\n    private search;\r\n    private getSearchConfig;\r\n    setQuery(query: string): void;\r\n    viewPage(pageNumber: number): void;\r\n    /**\r\n     * Get items from a given page without using navigation\r\n     */\r\n    getPageItems(pageNumber: number): void;\r\n    sort(sortCode: string): void;\r\n    private setQueryParams;\r\n}\r\n"]}