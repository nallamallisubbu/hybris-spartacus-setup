{"version":3,"file":"consent-management.component.d.ts","sources":["consent-management.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy, OnInit } from '@angular/core';\r\nimport { AnonymousConsentsConfig, AnonymousConsentsService, AuthService, ConsentTemplate, GlobalMessageService, UserConsentService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nexport declare class ConsentManagementComponent implements OnInit, OnDestroy {\r\n    protected userConsentService: UserConsentService;\r\n    protected globalMessageService: GlobalMessageService;\r\n    protected anonymousConsentsConfig: AnonymousConsentsConfig;\r\n    protected anonymousConsentsService: AnonymousConsentsService;\r\n    protected authService: AuthService;\r\n    private subscriptions;\r\n    private allConsentsLoading;\r\n    templateList$: Observable<ConsentTemplate[]>;\r\n    loading$: Observable<boolean>;\r\n    requiredConsents: string[];\r\n    constructor(userConsentService: UserConsentService, globalMessageService: GlobalMessageService, anonymousConsentsConfig: AnonymousConsentsConfig, anonymousConsentsService: AnonymousConsentsService, authService: AuthService);\r\n    ngOnInit(): void;\r\n    private consentListInit;\r\n    private hideAnonymousConsents;\r\n    private giveConsentInit;\r\n    private withdrawConsentInit;\r\n    private consentsExists;\r\n    onConsentChange({ given, template, }: {\r\n        given: boolean;\r\n        template: ConsentTemplate;\r\n    }): void;\r\n    private onConsentGivenSuccess;\r\n    private onConsentWithdrawnSuccess;\r\n    rejectAll(templates?: ConsentTemplate[]): void;\r\n    private setupWithdrawalStream;\r\n    allowAll(templates?: ConsentTemplate[]): void;\r\n    private setupGiveStream;\r\n    private isRequiredConsent;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}