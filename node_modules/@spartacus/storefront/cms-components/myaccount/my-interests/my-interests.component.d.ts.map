{"version":3,"file":"my-interests.component.d.ts","sources":["my-interests.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { OnDestroy, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginationModel, Product, ProductInterestEntryRelation, ProductInterestSearchResult, ProductService, TranslationService, UserInterestsService } from '@spartacus/core';\r\ninterface ProductInterestSearchResultUI extends ProductInterestSearchResult {\r\n    results?: (ProductInterestEntryRelation & {\r\n        product$?: Observable<Product>;\r\n    })[];\r\n}\r\nexport declare class MyInterestsComponent implements OnInit, OnDestroy {\r\n    private productInterestService;\r\n    private translationService;\r\n    private productService;\r\n    private DEFAULT_PAGE_SIZE;\r\n    private sortMapping;\r\n    sort: string;\r\n    sortOptions: {\r\n        code: string;\r\n        selected: boolean;\r\n    }[];\r\n    pagination: PaginationModel;\r\n    interests$: Observable<ProductInterestSearchResultUI>;\r\n    isRemoveDisabled$: Observable<boolean>;\r\n    getInterestsloading$: Observable<boolean>;\r\n    sortLabels: Observable<{\r\n        byNameAsc: string;\r\n        byNameDesc: string;\r\n    }>;\r\n    constructor(productInterestService: UserInterestsService, translationService: TranslationService, productService: ProductService);\r\n    ngOnInit(): void;\r\n    private getSortLabels;\r\n    private getProduct;\r\n    removeInterest(relation: ProductInterestEntryRelation & {\r\n        product$?: Observable<Product>;\r\n    }): void;\r\n    sortChange(sort: string): void;\r\n    pageChange(page: number): void;\r\n    ngOnDestroy(): void;\r\n}\r\nexport {};\r\n"]}