{"version":3,"file":"amend-order.service.d.ts","sources":["amend-order.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { FormControl, FormGroup } from '@angular/forms';\r\nimport { Order, OrderEntry, Price } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { OrderDetailsService } from '../order-details/order-details.service';\r\nimport { AmendOrderType } from './amend-order.model';\r\nexport declare abstract class OrderAmendService {\r\n    protected orderDetailsService: OrderDetailsService;\r\n    protected amendType: AmendOrderType;\r\n    protected form: FormGroup;\r\n    constructor(orderDetailsService: OrderDetailsService);\r\n    /**\r\n     * Returns entries for the given order.\r\n     */\r\n    abstract getEntries(): Observable<OrderEntry[]>;\r\n    /**\r\n     * Returns entries with an amended quantity.\r\n     */\r\n    getAmendedEntries(): Observable<OrderEntry[]>;\r\n    /**\r\n     * Submits the amended order.\r\n     */\r\n    abstract save(): void;\r\n    getOrder(): Observable<Order>;\r\n    /**\r\n     * returns the form with form data at runtime\r\n     */\r\n    getForm(): Observable<FormGroup>;\r\n    private buildForm;\r\n    protected getFormControl(form: FormGroup, entry: OrderEntry): FormControl;\r\n    /**\r\n     * As discussed, this calculation is moved to SPA side.\r\n     * The calculation and validation should be in backend facade layer.\r\n     */\r\n    getAmendedPrice(entry: OrderEntry): Price;\r\n    getMaxAmendQuantity(entry: OrderEntry): number;\r\n    isCancellation(): boolean;\r\n}\r\n"]}