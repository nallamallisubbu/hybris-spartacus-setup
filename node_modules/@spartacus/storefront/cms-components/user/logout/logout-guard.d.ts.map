{"version":3,"file":"logout-guard.d.ts","sources":["logout-guard.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { CanActivate } from '@angular/router';\r\nimport { AuthService, CmsService, ProtectedRoutesService, RoutingService, SemanticPathService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\n/**\r\n * Guards the _logout_ route.\r\n *\r\n * Takes care of routing the user to a logout page (if available) or redirects to\r\n * the homepage. If the homepage is protected, the user is redirected\r\n * to the login route instead.\r\n */\r\nexport declare class LogoutGuard implements CanActivate {\r\n    protected auth: AuthService;\r\n    protected cms: CmsService;\r\n    protected routing: RoutingService;\r\n    protected semanticPathService: SemanticPathService;\r\n    protected protectedRoutes: ProtectedRoutesService;\r\n    constructor(auth: AuthService, cms: CmsService, routing: RoutingService, semanticPathService: SemanticPathService, protectedRoutes: ProtectedRoutesService);\r\n    canActivate(): Observable<any>;\r\n    /**\r\n     * Whenever there is no specific \"logout\" page configured in the CMS,\r\n     * we redirect after the user is logged out.\r\n     *\r\n     * The user gets redirected to the homepage, unless the homepage is protected\r\n     * (in case of a closed shop). We'll redirect to the login page instead.\r\n     */\r\n    protected redirect(): void;\r\n    /**\r\n     * Log user out.\r\n     *\r\n     * This is delegated to the `AuthService`.\r\n     */\r\n    protected logout(): void;\r\n}\r\n"]}