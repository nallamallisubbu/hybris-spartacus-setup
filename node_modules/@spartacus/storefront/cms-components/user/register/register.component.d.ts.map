{"version":3,"file":"register.component.d.ts","sources":["register.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { AnonymousConsent, AnonymousConsentsConfig, AnonymousConsentsService, GlobalMessageService, RoutingService, Title, UserService, UserSignUp } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nexport declare class RegisterComponent implements OnInit, OnDestroy {\r\n    protected userService: UserService;\r\n    protected globalMessageService: GlobalMessageService;\r\n    protected fb: FormBuilder;\r\n    protected router: RoutingService;\r\n    protected anonymousConsentsService: AnonymousConsentsService;\r\n    protected anonymousConsentsConfig: AnonymousConsentsConfig;\r\n    titles$: Observable<Title[]>;\r\n    loading$: Observable<boolean>;\r\n    private subscription;\r\n    anonymousConsent$: Observable<{\r\n        consent: AnonymousConsent;\r\n        template: string;\r\n    }>;\r\n    registerForm: FormGroup;\r\n    constructor(userService: UserService, globalMessageService: GlobalMessageService, fb: FormBuilder, router: RoutingService, anonymousConsentsService: AnonymousConsentsService, anonymousConsentsConfig: AnonymousConsentsConfig);\r\n    ngOnInit(): void;\r\n    submitForm(): void;\r\n    registerUser(): void;\r\n    titleSelected(title: Title): void;\r\n    collectDataFromRegisterForm(formData: any): UserSignUp;\r\n    isConsentGiven(consent: AnonymousConsent): boolean;\r\n    private isConsentRequired;\r\n    private onRegisterUserSuccess;\r\n    toggleAnonymousConsent(): void;\r\n    private registerUserProcessInit;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}