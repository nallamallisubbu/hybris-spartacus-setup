{"version":3,"file":"icon-loader.service.d.ts","sources":["icon-loader.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { WindowRef } from '@spartacus/core';\r\nimport { IconConfig, ICON_TYPE } from './icon.model';\r\nexport declare class IconLoaderService {\r\n    protected winRef: WindowRef;\r\n    protected iconConfig: IconConfig;\r\n    protected sanitizer: DomSanitizer;\r\n    private loadedResources;\r\n    constructor(winRef: WindowRef, iconConfig: IconConfig, sanitizer: DomSanitizer);\r\n    /**\r\n     * Returns an html fragment which can be added to the DOM in a safe way.\r\n     */\r\n    getHtml(type: ICON_TYPE | string): SafeHtml;\r\n    /**\r\n     *\r\n     * Returns the symbol class(es) for the icon type.\r\n     */\r\n    getStyleClasses(iconType: ICON_TYPE | string): string;\r\n    /**\r\n     * Indicates whether the given `ICON_TYPE` is configured for\r\n     * the given `IconResourceType`.\r\n     */\r\n    private isResourceType;\r\n    /**\r\n     * Returns the path to the svg link. The link supports path names\r\n     * as well, if the config a[[s been setup to support a svg file path.\r\n     * Additionally, the icon prefix will be taken into account to prefix the\r\n     * icon IDs in the SVG.\r\n     */\r\n    private getSvgPath;\r\n    /**\r\n     * Loads the resource url (if any) for the given icon.\r\n     * The icon will only be loaded once.\r\n     *\r\n     * NOTE: this is not working when the shadow is used as there's\r\n     * no head element available and the link must be loaded for every\r\n     * web component.\r\n     */\r\n    addLinkResource(iconType: ICON_TYPE | string): void;\r\n    private findResource;\r\n    getSymbol(iconType: ICON_TYPE | string): string;\r\n    private get config();\r\n}\r\n"]}