{"version":3,"file":"navigation.service.d.ts","sources":["navigation.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { CmsNavigationComponent, CmsService, SemanticPathService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { NavigationNode } from './navigation-node.model';\r\nexport declare class NavigationService {\r\n    protected cmsService: CmsService;\r\n    protected semanticPathService: SemanticPathService;\r\n    constructor(cmsService: CmsService, semanticPathService: SemanticPathService);\r\n    createNavigation(data$: Observable<CmsNavigationComponent>): Observable<NavigationNode>;\r\n    /**\r\n     * returns an observable with the `NavigationNode` for the given `CmsNavigationComponent`.\r\n     * This function will load the navigation underlying entries and childs if they haven't been\r\n     * loaded so far.\r\n     */\r\n    getNavigationNode(data$: Observable<CmsNavigationComponent>): Observable<NavigationNode>;\r\n    /**\r\n     * Loads all navigation entry items' type and id. Dispatch action to load all these items\r\n     * @param nodeData\r\n     * @param root\r\n     * @param itemsList\r\n     */\r\n    private loadNavigationEntryItems;\r\n    /**\r\n     * Create a new node tree for the view\r\n     * @param nodeData\r\n     * @param items\r\n     */\r\n    private populateNavigationNode;\r\n    /**\r\n     * The node link is driven by the first entry.\r\n     */\r\n    private populateLink;\r\n    /**\r\n     *\r\n     * Gets the URL or link to a related item (category)\r\n     */\r\n    private getLink;\r\n}\r\n"]}