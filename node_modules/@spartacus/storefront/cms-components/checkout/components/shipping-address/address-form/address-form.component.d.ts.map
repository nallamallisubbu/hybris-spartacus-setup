{"version":3,"file":"address-form.component.d.ts","sources":["address-form.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Address, AddressValidation, CheckoutDeliveryService, Country, GlobalMessageService, Region, Title, UserAddressService, UserService } from '@spartacus/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { ModalRef, ModalService } from '../../../../../shared/components/modal/index';\r\nexport declare class AddressFormComponent implements OnInit, OnDestroy {\r\n    protected fb: FormBuilder;\r\n    protected checkoutDeliveryService: CheckoutDeliveryService;\r\n    protected userService: UserService;\r\n    protected userAddressService: UserAddressService;\r\n    protected globalMessageService: GlobalMessageService;\r\n    protected modalService: ModalService;\r\n    countries$: Observable<Country[]>;\r\n    titles$: Observable<Title[]>;\r\n    regions$: Observable<Region[]>;\r\n    selectedCountry$: BehaviorSubject<string>;\r\n    addressData: Address;\r\n    actionBtnLabel: string;\r\n    cancelBtnLabel: string;\r\n    setAsDefaultField: boolean;\r\n    showTitleCode: boolean;\r\n    showCancelBtn: boolean;\r\n    submitAddress: EventEmitter<any>;\r\n    backToAddress: EventEmitter<any>;\r\n    addressVerifySub: Subscription;\r\n    regionsSub: Subscription;\r\n    suggestedAddressModalRef: ModalRef;\r\n    addressForm: FormGroup;\r\n    constructor(fb: FormBuilder, checkoutDeliveryService: CheckoutDeliveryService, userService: UserService, userAddressService: UserAddressService, globalMessageService: GlobalMessageService, modalService: ModalService);\r\n    ngOnInit(): void;\r\n    countrySelected(country: Country): void;\r\n    regionSelected(region: Region): void;\r\n    toggleDefaultAddress(): void;\r\n    back(): void;\r\n    verifyAddress(): void;\r\n    openSuggestedAddress(results: AddressValidation): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}