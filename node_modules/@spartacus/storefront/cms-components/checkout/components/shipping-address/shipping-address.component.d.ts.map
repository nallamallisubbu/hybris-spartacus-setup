{"version":3,"file":"shipping-address.component.d.ts","sources":["shipping-address.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ActiveCartService, Address, CheckoutDeliveryService, RoutingService, TranslationService, UserAddressService } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Card } from '../../../../shared/components/card/card.component';\r\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\r\nexport interface CardWithAddress {\r\n    card: Card;\r\n    address: Address;\r\n}\r\nexport declare class ShippingAddressComponent implements OnInit {\r\n    protected userAddressService: UserAddressService;\r\n    protected routingService: RoutingService;\r\n    protected checkoutDeliveryService: CheckoutDeliveryService;\r\n    protected checkoutConfigService: CheckoutConfigService;\r\n    protected activatedRoute: ActivatedRoute;\r\n    protected translation: TranslationService;\r\n    protected activeCartService: ActiveCartService;\r\n    existingAddresses$: Observable<Address[]>;\r\n    newAddressFormManuallyOpened: boolean;\r\n    isLoading$: Observable<boolean>;\r\n    cards$: Observable<CardWithAddress[]>;\r\n    selectedAddress$: Observable<Address>;\r\n    forceLoader: boolean;\r\n    isGuestCheckout: boolean;\r\n    constructor(userAddressService: UserAddressService, routingService: RoutingService, checkoutDeliveryService: CheckoutDeliveryService, checkoutConfigService: CheckoutConfigService, activatedRoute: ActivatedRoute, translation: TranslationService, activeCartService: ActiveCartService);\r\n    ngOnInit(): void;\r\n    getCardContent(address: Address, selected: any, textDefaultShippingAddress: string, textShipToThisAddress: string, textSelected: string): Card;\r\n    selectAddress(address: Address): void;\r\n    addAddress(address: Address): void;\r\n    showNewAddressForm(): void;\r\n    hideNewAddressForm(goPrevious?: boolean): void;\r\n    goNext(): void;\r\n    goPrevious(): void;\r\n}\r\n"]}