{"version":3,"file":"payment-form.component.d.ts","sources":["payment-form.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Address, AddressValidation, CardType, CheckoutDeliveryService, CheckoutPaymentService, Country, GlobalMessageService, Region, StateUtils, UserAddressService, UserPaymentService } from '@spartacus/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Card } from '../../../../../shared/components/card/card.component';\r\nimport { ModalRef, ModalService } from '../../../../../shared/components/modal/index';\r\nimport { ICON_TYPE } from '../../../../misc/icon/index';\r\nexport declare class PaymentFormComponent implements OnInit, OnDestroy {\r\n    protected checkoutPaymentService: CheckoutPaymentService;\r\n    protected checkoutDeliveryService: CheckoutDeliveryService;\r\n    protected userPaymentService: UserPaymentService;\r\n    protected globalMessageService: GlobalMessageService;\r\n    protected fb: FormBuilder;\r\n    protected modalService: ModalService;\r\n    protected userAddressService: UserAddressService;\r\n    iconTypes: typeof ICON_TYPE;\r\n    private addressVerifySub;\r\n    suggestedAddressModalRef: ModalRef;\r\n    months: string[];\r\n    years: number[];\r\n    cardTypes$: Observable<CardType[]>;\r\n    shippingAddress$: Observable<Address>;\r\n    countries$: Observable<Country[]>;\r\n    loading$: Observable<StateUtils.LoaderState<void>>;\r\n    sameAsShippingAddress: boolean;\r\n    regions$: Observable<Region[]>;\r\n    selectedCountry$: BehaviorSubject<string>;\r\n    showSameAsShippingAddressCheckbox$: Observable<boolean>;\r\n    setAsDefaultField: boolean;\r\n    paymentMethodsCount: number;\r\n    goBack: EventEmitter<any>;\r\n    closeForm: EventEmitter<any>;\r\n    setPaymentDetails: EventEmitter<any>;\r\n    paymentForm: FormGroup;\r\n    billingAddressForm: FormGroup;\r\n    constructor(checkoutPaymentService: CheckoutPaymentService, checkoutDeliveryService: CheckoutDeliveryService, userPaymentService: UserPaymentService, globalMessageService: GlobalMessageService, fb: FormBuilder, modalService: ModalService, userAddressService: UserAddressService);\r\n    ngOnInit(): void;\r\n    expMonthAndYear(): void;\r\n    toggleDefaultPaymentMethod(): void;\r\n    toggleSameAsShippingAddress(): void;\r\n    getAddressCardContent(address: Address): Card;\r\n    openSuggestedAddress(results: AddressValidation): void;\r\n    close(): void;\r\n    back(): void;\r\n    verifyAddress(): void;\r\n    countrySelected(country: Country): void;\r\n    next(): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}