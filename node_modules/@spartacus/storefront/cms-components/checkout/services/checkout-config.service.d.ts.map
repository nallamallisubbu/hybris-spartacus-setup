{"version":3,"file":"checkout-config.service.d.ts","sources":["checkout-config.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { ActivatedRoute } from '@angular/router';\r\nimport { DeliveryMode, RoutingConfigService } from '@spartacus/core';\r\nimport { CheckoutConfig } from '../config/checkout-config';\r\nimport { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';\r\nexport declare class CheckoutConfigService {\r\n    private checkoutConfig;\r\n    private routingConfigService;\r\n    steps: CheckoutStep[];\r\n    private express;\r\n    private guest;\r\n    private defaultDeliveryMode;\r\n    constructor(checkoutConfig: CheckoutConfig, routingConfigService: RoutingConfigService);\r\n    getCheckoutStep(currentStepType: CheckoutStepType): CheckoutStep;\r\n    getCheckoutStepRoute(currentStepType: CheckoutStepType): string;\r\n    getFirstCheckoutStepRoute(): string;\r\n    getNextCheckoutStepUrl(activatedRoute: ActivatedRoute): string;\r\n    getPreviousCheckoutStepUrl(activatedRoute: ActivatedRoute): string;\r\n    getCurrentStepIndex(activatedRoute: ActivatedRoute): number | null;\r\n    protected compareDeliveryCost(deliveryMode1: DeliveryMode, deliveryMode2: DeliveryMode): number;\r\n    protected findMatchingDeliveryMode(deliveryModes: DeliveryMode[], index?: number): string;\r\n    getPreferredDeliveryMode(deliveryModes: DeliveryMode[]): string;\r\n    isExpressCheckout(): boolean;\r\n    isGuestCheckout(): boolean;\r\n    private getStepUrlFromActivatedRoute;\r\n    private getStepUrlFromStepRoute;\r\n    private getCheckoutStepIndex;\r\n}\r\n"]}