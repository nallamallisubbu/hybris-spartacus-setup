{"version":3,"file":"layout-config.d.ts","sources":["layout-config.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { DeferLoadingStrategy } from '@spartacus/core';\r\nimport { LaunchConfig } from '../launch-dialog/index';\r\nexport declare enum BREAKPOINT {\r\n    xs = \"xs\",\r\n    sm = \"sm\",\r\n    md = \"md\",\r\n    lg = \"lg\",\r\n    xl = \"xl\"\r\n}\r\nexport declare type LayoutSections = 'header' | 'footer' | 'LandingPage2Template' | string;\r\nexport declare type SlotConfig = {\r\n    /** The cms page slots are mapped by the `slot.position`. */\r\n    slots?: string[];\r\n    /**\r\n     * The page fold identifies the last expected page slot above-the-fold.\r\n     * It's perfectly fine to specify this by idication, however a more\r\n     * precise indication will have an positive impact on performance.\r\n     */\r\n    pageFold?: string;\r\n};\r\nexport declare type SlotGroup = {\r\n    /** The page slot configuration for large screens */\r\n    [BREAKPOINT.lg]?: SlotConfig;\r\n    /** The page slot configuration for medium screens */\r\n    [BREAKPOINT.md]?: SlotConfig;\r\n    /** The page slot configuration for small screens */\r\n    [BREAKPOINT.sm]?: SlotConfig;\r\n    /** The page slot configuration for extra small screens */\r\n    [BREAKPOINT.xs]?: SlotConfig;\r\n};\r\nexport declare type LayoutSlotConfig = {\r\n    [section in LayoutSections]: SlotConfig | SlotGroup | LayoutSlotConfig;\r\n};\r\n/**\r\n * The LayoutConfig supports the configuration of page slots by page templates\r\n * or page sections, such as headers and footers. The configuration also supports\r\n * adaptive design per breadpoint (not per device type), so that the DOM is (re)rendered\r\n * por a given breakpoint.\r\n */\r\nexport declare abstract class LayoutConfig {\r\n    /** The breakpoint configuration is used when the DOM is (re)rendered in specific view.\r\n     * This allows for adaptive rendering, so that the DOM is rendered for specific breakpoints. */\r\n    breakpoints?: {\r\n        [BREAKPOINT.xs]?: number;\r\n        [BREAKPOINT.sm]?: number;\r\n        [BREAKPOINT.md]?: number;\r\n        [BREAKPOINT.lg]?: number;\r\n    };\r\n    layoutSlots?: LayoutSlotConfig;\r\n    /**\r\n     * Deferrred loading is a technique to hold of with the loading / creation\r\n     * of DOM elements which are not not in the initial view port.\r\n     * This technique wil increase performance.\r\n     */\r\n    deferredLoading?: {\r\n        /**\r\n         * The global strategy will be used as a fallback strategy for all DOM creation,\r\n         * but can be overriden by local configuration, i.e. for cms components.\r\n         */\r\n        strategy?: DeferLoadingStrategy;\r\n        /**\r\n         * The intersection margin contains the offset used by the Intersection Observer\r\n         * to observe elements outside the view port.\r\n         *\r\n         * See https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin\r\n         */\r\n        intersectionMargin?: string;\r\n    };\r\n    launch?: LaunchConfig;\r\n}\r\n"]}