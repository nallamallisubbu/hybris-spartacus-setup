{"version":3,"file":"auto-focus.service.d.ts","sources":["auto-focus.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { EscapeFocusService } from '../escape/escape-focus.service';\r\nimport { AutoFocusConfig, PersistFocusConfig } from '../keyboard-focus.model';\r\nexport declare class AutoFocusService extends EscapeFocusService {\r\n    /**\r\n     * Returns the first focusable child element of the host element.\r\n     */\r\n    findFirstFocusable(host: HTMLElement, config?: AutoFocusConfig): HTMLElement;\r\n    /**\r\n     * Indicates whether any of the focusabe child elements is focused.\r\n     */\r\n    hasPersistedFocus(host: HTMLElement, config: PersistFocusConfig): boolean;\r\n    /**\r\n     * Returns the element that has a persisted focus state.\r\n     *\r\n     * @param host the `HTMLElement` used to query for focusable children\r\n     * @param group the optional group for the persistent state, to separate different focus\r\n     *   groups and remain the persistence\r\n     */\r\n    protected getPersisted(host: HTMLElement, group?: string): HTMLElement;\r\n}\r\n"]}