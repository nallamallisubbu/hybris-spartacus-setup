{"version":3,"file":"escape-focus.directive.d.ts","sources":["escape-focus.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, OnInit } from '@angular/core';\r\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\r\nimport { PersistFocusDirective } from '../persist/persist-focus.directive';\r\nimport { EscapeFocusService } from './escape-focus.service';\r\n/**\r\n * Directive to focus the host element whenever the `escape` key is captured.\r\n * UiEvents bubble up by nature, which is why the `cxEscGroup` can be used\r\n * on a tree of elements. Each time the escape key is used, the focus will\r\n * move up in the DOM tree.\r\n *\r\n */\r\nexport declare class EscapeFocusDirective extends PersistFocusDirective implements OnInit {\r\n    protected elementRef: ElementRef;\r\n    protected service: EscapeFocusService;\r\n    protected defaultConfig: EscapeFocusConfig;\r\n    protected config: EscapeFocusConfig;\r\n    esc: EventEmitter<boolean>;\r\n    /**\r\n     * Handles the escape key event.\r\n     * @param event the native keyboard event which contains the escape keydown event\r\n     */\r\n    handleEscape(event: KeyboardEvent): void;\r\n    constructor(elementRef: ElementRef, service: EscapeFocusService);\r\n    ngOnInit(): void;\r\n}\r\n"]}