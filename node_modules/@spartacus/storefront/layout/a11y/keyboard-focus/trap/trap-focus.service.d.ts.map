{"version":3,"file":"trap-focus.service.d.ts","sources":["trap-focus.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { MOVE_FOCUS, TrapFocusConfig } from '../keyboard-focus.model';\r\nimport { TabFocusService } from '../tab/tab-focus.service';\r\nexport declare class TrapFocusService extends TabFocusService {\r\n    /**\r\n     * Indicates whether any of the child elements of the host are focusable.\r\n     *\r\n     * @param host `HTMLElement` that is used to query the focusable elements.\r\n     */\r\n    hasFocusableChildren(host: HTMLElement): boolean;\r\n    /**\r\n     * Focus the next or previous element of all available focusable elements.\r\n     * The focus is _trapped_ in case there's no next or previous available element.\r\n     * The focus will automatically move the start or end of the list.\r\n     */\r\n    moveFocus(host: HTMLElement, config: TrapFocusConfig, increment: MOVE_FOCUS, event: UIEvent): void;\r\n    protected getTrapStart(trap: boolean | 'start' | 'end'): boolean;\r\n    protected getTrapEnd(trap: boolean | 'start' | 'end'): boolean;\r\n}\r\n"]}