{"version":3,"file":"select-focus.util.d.ts","sources":["select-focus.util.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { AutoFocusConfig } from '../keyboard-focus.model';\r\nexport declare class SelectFocusUtility {\r\n    /**\r\n     * Query selectors used to query focusable child elements of the host element.\r\n     * The selectors are supplemented with `:not([disabled])` and `:not([hidden])`.\r\n     */\r\n    protected focusableSelectors: string[];\r\n    protected focusableSelectorSuffix: string;\r\n    query(host: HTMLElement, selector: string): HTMLElement[];\r\n    findFirstFocusable(host: HTMLElement, config?: AutoFocusConfig): HTMLElement;\r\n    /**\r\n     * returns all focusable child elements of the host element. The element selectors\r\n     * are build from the `focusableSelectors`.\r\n     *\r\n     * @param host the `HTMLElement` used to query focusable elements\r\n     * @param locked indicates whether inactive (`tabindex=\"-1\"`) focusable elements should be returned\r\n     * @param invisible indicates whether hidden focusable elements should be returned\r\n     */\r\n    findFocusable(host: HTMLElement, locked?: boolean, invisible?: boolean): HTMLElement[];\r\n    /**\r\n     * Indicates whether the element is hidden by CSS. There are various CSS rules and\r\n     * HTML structures which can lead to an hidden or invisible element. An `offsetParent`\r\n     * of null indicates that the element or any of it's decendants is hidden (`display:none`).\r\n     *\r\n     * Oother techniques use the visibility (`visibility: hidden`), opacity (`opacity`) or\r\n     * phyisical location on the element itself or any of it's anchestor elements. Those\r\n     * technique require to work with the _computed styles_, which will cause a performance\r\n     * downgrade. We don't do this in the standard implementaton.\r\n     */\r\n    protected isHidden(el: HTMLElement): boolean;\r\n}\r\n"]}