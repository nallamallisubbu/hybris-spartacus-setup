{"version":3,"file":"carousel.service.d.ts","sources":["carousel.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { WindowRef } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nexport declare class CarouselService {\r\n    private winRef;\r\n    constructor(winRef: WindowRef);\r\n    /**\r\n     * The number of items per slide is calculated by the help of\r\n     * the item width and the available width of the host element.\r\n     * This appoach makes it possible to place the carousel in different\r\n     * layouts. Instead of using the page breakpoints, the host size is\r\n     * taken into account.\r\n     *\r\n     * Since there's no element resize API available, we use the\r\n     * window `resize` event, so that we can adjust the number of items\r\n     * whenever the window got resized.\r\n     */\r\n    getItemsPerSlide(nativeElement: HTMLElement, itemWidth: string): Observable<number>;\r\n    /**\r\n     * Calculates the number of items per given hostSize.  calculated based on the given\r\n     * intended size in pixels or percentages. The\r\n     *\r\n     * @param availableWidth The available width in pixels for the carousel items.\r\n     * @param itemWidth The width per carousel item, in px or percentage.\r\n     */\r\n    private calculateItems;\r\n}\r\n"]}