{"version":3,"file":"pagination.builder.d.ts","sources":["pagination.builder.d.ts"],"names":[],"mappingssourcesContent":["import { PaginationConfig } from './config/pagination.config';\r\nimport { PaginationItem } from './pagination.model';\r\n/**\r\n * Builds a pagination structures based on a pageCount and current page number.\r\n * There are various {@link PaginationConfig} options which can be used to configure\r\n * the behaviour of the build. Alternatively, CSS can be used to further customise\r\n * the pagination.\r\n *\r\n * Examples:\r\n * The full blown pagination items contain the follow elements:\r\n *\r\n * `« ‹ 1 ... 4 (5) 6 ... 9 › »`\r\n *\r\n * This includes pagination items to the following pages:\r\n * - start page\r\n * - previous page\r\n * - first page\r\n * - page range\r\n * - last page\r\n * - next page\r\n * - end page\r\n *\r\n * All of those links are configurable, including the size of the page range.\r\n * The current page will always be centered in the page range to provide direct access\r\n * to the previous and next page.\r\n */\r\nexport declare class PaginationBuilder {\r\n    protected paginationConfig: PaginationConfig;\r\n    constructor(paginationConfig: PaginationConfig);\r\n    /**\r\n     * Builds a list of `PaginationItem`. The give pageCount and current are used\r\n     * to build out the full pagination. There are various {@link PaginationConfig} options\r\n     * which can be used to configure the behaviour of the build. Alternatively, CSS\r\n     * can be used to further specialize visibility of the pagination.\r\n     *\r\n     * @param pageCount The total number of pages\r\n     * @param current The current page number, 0-index based\r\n     * @returns An array of `PaginationItem`\r\n     */\r\n    paginate(pageCount: number, current: number): PaginationItem[];\r\n    /**\r\n     * Returns the current page with surrounding pages (based on the `config.rangeCount`).\r\n     * The current page is always centered to provide direct access to the previous and next page.\r\n     *\r\n     * @param pages The list of page items that is used to amend\r\n     * @param pageCount The total number of pages\r\n     * @param current The current page number, 0-index based\r\n     */\r\n    protected addPages(pages: PaginationItem[], pageCount: number, current: number): void;\r\n    /**\r\n     * Adds dots before and after the given pages, if configured (defaults to true).\r\n     * If the dots only represent a single page, the page number is added instead of\r\n     * the dots, unless the configuration requires dots always.\r\n     *\r\n     * @param pages The list of page items that is used to amend\r\n     * @param pageCount The total number of pages\r\n     */\r\n    protected addDots(pages: PaginationItem[], pageCount: number): void;\r\n    /**\r\n     * Add links to the first and last page, if configured to do so.\r\n     *\r\n     * @param pages The list of page items that is used to amend\r\n     * @param pageCount The total number of pages\r\n     *\r\n     */\r\n    protected addFirstLast(pages: PaginationItem[], pageCount: number): void;\r\n    /**\r\n     * Add links to the start, previous, next and last page, if configured to do so.\r\n     * The order of the links can be configured by using the {@link PaginationConfig},\r\n     * using the `PaginationNavigationPosition` (`BEFORE` or `AFTER`).\r\n     * The `PaginationNavigationPosition` allows for 3 flavours:\r\n     *\r\n     * - by default the pagination starts with start and previous and ends with the next and end links\r\n     * - BEFORE – all navigation links are added in the front of the pagination list\r\n     * - AFTER – all navigation links are pushed to the end of the pagination list\r\n     *\r\n     * @param pages The list of page items that is used to amend\r\n     * @param pageCount The total number of pages\r\n     * @param current The current page number, 0-index based\r\n     *\r\n     */\r\n    protected addNavigation(pages: PaginationItem[], pageCount: number, current: number): void;\r\n    /**\r\n     * Returns the start and previous links, if applicable.\r\n     */\r\n    private getBeforeLinks;\r\n    /**\r\n     * Returns the next and end links, if applicable.\r\n     */\r\n    private getAfter;\r\n    /**\r\n     * Resolves the first page of the range we need to build.\r\n     * This is the page that is leading up to the range of the\r\n     * current page.\r\n     *\r\n     * @param pageCount The total number of pages.\r\n     * @param current The current page number, 0-index based.\r\n     */\r\n    private getStartOfRange;\r\n    private get config();\r\n}\r\n"]}