{"version":3,"file":"anonymous-consent-dialog.component.d.ts","sources":["anonymous-consent-dialog.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { AnonymousConsent, AnonymousConsentsConfig, AnonymousConsentsService, ConsentTemplate } from '@spartacus/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\r\nimport { FocusConfig } from '../../../layout/a11y/keyboard-focus/index';\r\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\r\nexport declare class AnonymousConsentDialogComponent implements OnInit, OnDestroy {\r\n    protected config: AnonymousConsentsConfig;\r\n    protected anonymousConsentsService: AnonymousConsentsService;\r\n    protected el: ElementRef;\r\n    protected launchDialogService: LaunchDialogService;\r\n    role: string;\r\n    modal: boolean;\r\n    private subscriptions;\r\n    showLegalDescription: boolean;\r\n    iconTypes: typeof ICON_TYPE;\r\n    requiredConsents: string[];\r\n    loading$: Observable<boolean>;\r\n    templates$: Observable<ConsentTemplate[]>;\r\n    consents$: Observable<AnonymousConsent[]>;\r\n    focusConfig: FocusConfig;\r\n    handleClick(event: UIEvent): void;\r\n    constructor(config: AnonymousConsentsConfig, anonymousConsentsService: AnonymousConsentsService, el: ElementRef, launchDialogService: LaunchDialogService);\r\n    ngOnInit(): void;\r\n    close(reason?: any): void;\r\n    rejectAll(): void;\r\n    allowAll(): void;\r\n    private isRequiredConsent;\r\n    onConsentChange({ given, template, }: {\r\n        given: boolean;\r\n        template: ConsentTemplate;\r\n    }): void;\r\n    getCorrespondingConsent(template: ConsentTemplate, consents?: AnonymousConsent[]): AnonymousConsent;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}