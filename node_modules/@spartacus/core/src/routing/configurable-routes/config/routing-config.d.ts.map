{"version":3,"file":"routing-config.d.ts","sources":["routing-config.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { RoutesConfig } from '../routes-config';\r\nexport declare const enum RouteLoadStrategy {\r\n    /**\r\n     * Don't reload the data on navigation if it was loaded before\r\n     */\r\n    ONCE = \"once\",\r\n    /**\r\n     * Always reload the data on navigation\r\n     */\r\n    ALWAYS = \"always\"\r\n}\r\nexport declare abstract class RoutingConfig {\r\n    routing?: {\r\n        /**\r\n         * Configuration of semantic routes. Key is route's name. Value is the config specific to this route.\r\n         */\r\n        routes?: RoutesConfig;\r\n        /**\r\n         * When true, it closes the storefront for unauthorized users, except from routes that have individual config flag `protected: false`\r\n         */\r\n        protected?: boolean;\r\n        /**\r\n         * Global load strategy which is used as a fallback for loading data on each navigation\r\n         */\r\n        loadStrategy?: RouteLoadStrategy;\r\n    };\r\n}\r\n"]}