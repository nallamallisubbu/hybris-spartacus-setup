{"version":3,"file":"i18n-config.d.ts","sources":["i18n-config.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { TranslationResources } from '../translation-resources';\r\nexport declare abstract class I18nConfig {\r\n    i18n?: {\r\n        /**\r\n         * When there are missing translation resources for the active language, the fallback language will be used.\r\n         */\r\n        fallbackLang?: string | false;\r\n        /**\r\n         * Configuration for lazy loading of translation files.\r\n         * For eager loading of translations please use config option `i18n.resources`\r\n         */\r\n        backend?: {\r\n            /**\r\n             * The path to JSON translations. It should contain placeholders:\r\n             * - `{{lng}}` for language\r\n             * - `{{ns}}` for the name of chunk.\r\n             *\r\n             * Example:\r\n             * `assets/i18n-assets/{{lng}}/{{ns}}.json`\r\n             */\r\n            loadPath?: string;\r\n        };\r\n        /**\r\n         * Reference to translation resources that are eagerly bundled with JS app.\r\n         * For lazy loading of translations please use config option `i18n.backend` instead.\r\n         */\r\n        resources?: TranslationResources;\r\n        /**\r\n         * Logs i18n events (like loading translation resources) to the console. Don't use in production!\r\n         */\r\n        debug?: boolean;\r\n        /**\r\n         * Mapping that assigns keys' namespaces to specific chunks. The main purpose of chunks is to lazy load them.\r\n         */\r\n        chunks?: {\r\n            [chunk: string]: string[];\r\n        };\r\n    };\r\n}\r\n"]}