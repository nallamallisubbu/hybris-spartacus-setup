{"version":3,"file":"i18next-translation.service.d.ts","sources":["i18next-translation.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Observable } from 'rxjs';\r\nimport { I18nConfig } from '../config/i18n-config';\r\nimport { TranslationChunkService } from '../translation-chunk.service';\r\nimport { TranslationService } from '../translation.service';\r\nexport declare class I18nextTranslationService implements TranslationService {\r\n    protected config: I18nConfig;\r\n    protected translationChunk: TranslationChunkService;\r\n    private readonly NON_BREAKING_SPACE;\r\n    protected readonly NAMESPACE_SEPARATOR = \":\";\r\n    constructor(config: I18nConfig, translationChunk: TranslationChunkService);\r\n    translate(key: string, options?: any, whitespaceUntilLoaded?: boolean): Observable<string>;\r\n    loadChunks(chunkNames: string | string[]): Promise<any>;\r\n    /**\r\n     * Returns a fallback value in case when the given key is missing\r\n     * @param key\r\n     */\r\n    protected getFallbackValue(key: string): string;\r\n    private reportMissingKey;\r\n    private getNamespacedKey;\r\n}\r\n"]}