{"version":3,"file":"anonymous-consents.effect.d.ts","sources":["anonymous-consents.effect.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Actions } from '@ngrx/effects';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../../../auth/index';\r\nimport { UserConsentService } from '../../../user/facade/user-consent.service';\r\nimport { UserActions } from '../../../user/store/actions/index';\r\nimport { AnonymousConsentsConfig } from '../../config/anonymous-consents-config';\r\nimport { AnonymousConsentTemplatesConnector } from '../../connectors/anonymous-consent-templates.connector';\r\nimport { AnonymousConsentsService } from '../../facade/index';\r\nimport { AnonymousConsentsActions } from '../actions/index';\r\nexport declare class AnonymousConsentsEffects {\r\n    private actions$;\r\n    private anonymousConsentTemplatesConnector;\r\n    private authService;\r\n    private anonymousConsentsConfig;\r\n    private anonymousConsentService;\r\n    private userConsentService;\r\n    checkConsentVersions$: Observable<AnonymousConsentsActions.LoadAnonymousConsentTemplates | AnonymousConsentsActions.LoadAnonymousConsentTemplatesFail | Observable<never>>;\r\n    loadAnonymousConsentTemplates$: Observable<AnonymousConsentsActions.AnonymousConsentsActions>;\r\n    transferAnonymousConsentsToUser$: Observable<UserActions.TransferAnonymousConsent | Observable<never>>;\r\n    giveRequiredConsentsToUser$: Observable<UserActions.GiveUserConsent | Observable<never>>;\r\n    constructor(actions$: Actions, anonymousConsentTemplatesConnector: AnonymousConsentTemplatesConnector, authService: AuthService, anonymousConsentsConfig: AnonymousConsentsConfig, anonymousConsentService: AnonymousConsentsService, userConsentService: UserConsentService);\r\n    /**\r\n     * Compares the given versions and determines if there's a mismatch,\r\n     * in which case `true` is returned.\r\n     *\r\n     * @param currentVersions versions of the current consents\r\n     * @param newVersions versions of the new consents\r\n     */\r\n    private detectUpdatedVersion;\r\n}\r\n"]}