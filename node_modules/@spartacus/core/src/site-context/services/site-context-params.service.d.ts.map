{"version":3,"file":"site-context-params.service.d.ts","sources":["site-context-params.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Injector } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { SiteContextConfig } from '../config/site-context-config';\r\nimport { SiteContext } from '../facade/site-context.interface';\r\nimport { ContextServiceMap } from '../providers/context-service-map';\r\nexport declare class SiteContextParamsService {\r\n    private config;\r\n    private injector;\r\n    private serviceMap;\r\n    constructor(config: SiteContextConfig, injector: Injector, serviceMap: ContextServiceMap);\r\n    getContextParameters(): string[];\r\n    getUrlEncodingParameters(): string[];\r\n    getParamValues(param: string): string[];\r\n    getParamDefaultValue(param: string): string;\r\n    getSiteContextService(param: string): SiteContext<any>;\r\n    getValue(param: string): string;\r\n    setValue(param: string, value: string): void;\r\n    /**\r\n     * Get active values for all provided context parameters\r\n     *\r\n     * @param params Context parameters\r\n     *\r\n     * @returns Observable emitting array of all passed active context values\r\n     */\r\n    getValues(params: string[]): Observable<Array<string>>;\r\n}\r\n"]}