{"version":3,"file":"checkout-delivery.service.d.ts","sources":["checkout-delivery.service.d.ts"],"names":[],"mappingssourcesContent":["import { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../../auth/facade/auth.service';\r\nimport { ActiveCartService } from '../../cart/facade/active-cart.service';\r\nimport { Address, AddressValidation } from '../../model/address.model';\r\nimport { DeliveryMode } from '../../model/order.model';\r\nimport { StateWithProcess } from '../../process/store/process-state';\r\nimport { LoaderState } from '../../state/utils/loader/loader-state';\r\nimport { StateWithCheckout } from '../store/checkout-state';\r\nexport declare class CheckoutDeliveryService {\r\n    protected checkoutStore: Store<StateWithCheckout | StateWithProcess<void>>;\r\n    protected authService: AuthService;\r\n    protected activeCartService: ActiveCartService;\r\n    constructor(checkoutStore: Store<StateWithCheckout | StateWithProcess<void>>, authService: AuthService, activeCartService: ActiveCartService);\r\n    /**\r\n     * Get supported delivery modes\r\n     */\r\n    getSupportedDeliveryModes(): Observable<DeliveryMode[]>;\r\n    /**\r\n     * Get selected delivery mode\r\n     */\r\n    getSelectedDeliveryMode(): Observable<DeliveryMode>;\r\n    /**\r\n     * Get selected delivery mode code\r\n     */\r\n    getSelectedDeliveryModeCode(): Observable<string>;\r\n    /**\r\n     * Get delivery address\r\n     */\r\n    getDeliveryAddress(): Observable<Address>;\r\n    /**\r\n     * Get status about successfully set Delivery Address\r\n     */\r\n    getSetDeliveryAddressProcess(): Observable<LoaderState<void>>;\r\n    /**\r\n     * Clear info about process of setting Delivery Address\r\n     */\r\n    resetSetDeliveryAddressProcess(): void;\r\n    /**\r\n     * Get status about of set Delivery Mode process\r\n     */\r\n    getSetDeliveryModeProcess(): Observable<LoaderState<void>>;\r\n    /**\r\n     * Clear info about process of setting Delivery Mode\r\n     */\r\n    resetSetDeliveryModeProcess(): void;\r\n    /**\r\n     * Clear info about process of setting Supported Delivery Modes\r\n     */\r\n    resetLoadSupportedDeliveryModesProcess(): void;\r\n    /**\r\n     * Get status about of set supported Delivery Modes process\r\n     */\r\n    getLoadSupportedDeliveryModeProcess(): Observable<LoaderState<void>>;\r\n    /**\r\n     * Clear supported delivery modes loaded in last checkout process\r\n     */\r\n    clearCheckoutDeliveryModes(): void;\r\n    /**\r\n     * Get address verification results\r\n     */\r\n    getAddressVerificationResults(): Observable<AddressValidation | string>;\r\n    /**\r\n     * Create and set a delivery address using the address param\r\n     * @param address : the Address to be created and set\r\n     */\r\n    createAndSetAddress(address: Address): void;\r\n    /**\r\n     * Load supported delivery modes\r\n     */\r\n    loadSupportedDeliveryModes(): void;\r\n    /**\r\n     * Set delivery mode\r\n     * @param mode : The delivery mode to be set\r\n     */\r\n    setDeliveryMode(mode: string): void;\r\n    /**\r\n     * Verifies the address\r\n     * @param address : the address to be verified\r\n     */\r\n    verifyAddress(address: Address): void;\r\n    /**\r\n     * Set delivery address\r\n     * @param address : The address to be set\r\n     */\r\n    setDeliveryAddress(address: Address): void;\r\n    /**\r\n     * Clear address verification results\r\n     */\r\n    clearAddressVerificationResults(): void;\r\n    /**\r\n     * Clear address already setup in last checkout process\r\n     */\r\n    clearCheckoutDeliveryAddress(): void;\r\n    /**\r\n     * Clear selected delivery mode setup in last checkout process\r\n     */\r\n    clearCheckoutDeliveryMode(): void;\r\n    /**\r\n     * Clear address and delivery mode already setup in last checkout process\r\n     */\r\n    clearCheckoutDeliveryDetails(): void;\r\n    protected actionAllowed(): boolean;\r\n}\r\n"]}