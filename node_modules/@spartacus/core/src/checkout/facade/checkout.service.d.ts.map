{"version":3,"file":"checkout.service.d.ts","sources":["checkout.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../../auth/facade/auth.service';\r\nimport { ActiveCartService } from '../../cart/facade/active-cart.service';\r\nimport { Order } from '../../model/order.model';\r\nimport { StateWithCheckout } from '../store/checkout-state';\r\nexport declare class CheckoutService {\r\n    protected checkoutStore: Store<StateWithCheckout>;\r\n    protected authService: AuthService;\r\n    protected activeCartService: ActiveCartService;\r\n    constructor(checkoutStore: Store<StateWithCheckout>, authService: AuthService, activeCartService: ActiveCartService);\r\n    /**\r\n     * Places an order\r\n     */\r\n    placeOrder(): void;\r\n    /**\r\n     * Clear checkout data\r\n     */\r\n    clearCheckoutData(): void;\r\n    /**\r\n     * Clear checkout step\r\n     * @param stepNumber : the step number to be cleared\r\n     */\r\n    clearCheckoutStep(stepNumber: number): void;\r\n    /**\r\n     * Load checkout details data\r\n     * @param cartId : string Cart ID of loaded cart\r\n     */\r\n    loadCheckoutDetails(cartId: string): void;\r\n    /**\r\n     * Get status of checkout details loaded\r\n     */\r\n    getCheckoutDetailsLoaded(): Observable<boolean>;\r\n    /**\r\n     * Get order details\r\n     */\r\n    getOrderDetails(): Observable<Order>;\r\n    protected actionAllowed(): boolean;\r\n}\r\n"]}