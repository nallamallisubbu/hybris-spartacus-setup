{"version":3,"file":"cart-voucher.service.d.ts","sources":["cart-voucher.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../../auth/index';\r\nimport * as fromProcessStore from '../../process/store/process-state';\r\nimport { ActiveCartService } from './active-cart.service';\r\nexport declare class CartVoucherService {\r\n    protected store: Store<fromProcessStore.StateWithProcess<void>>;\r\n    protected authService: AuthService;\r\n    protected activeCartService: ActiveCartService;\r\n    constructor(store: Store<fromProcessStore.StateWithProcess<void>>, authService: AuthService, activeCartService: ActiveCartService);\r\n    addVoucher(voucherId: string, cartId?: string): void;\r\n    removeVoucher(voucherId: string, cartId?: string): void;\r\n    /**\r\n     * Get add voucher process error flag\r\n     * @deprecated since 2.0\r\n     */\r\n    getAddVoucherResultError(): Observable<boolean>;\r\n    /**\r\n     * Get add voucher process success flag\r\n     * @deprecated since 2.0\r\n     */\r\n    getAddVoucherResultSuccess(): Observable<boolean>;\r\n    /**\r\n     * Get add voucher process loading flag\r\n     * @deprecated since 2.0\r\n     */\r\n    getAddVoucherResultLoading(): Observable<boolean>;\r\n    /**\r\n     * Reset add voucher process\r\n     * @deprecated since 2.0\r\n     */\r\n    resetAddVoucherProcessingState(): void;\r\n    private combineUserAndCartId;\r\n}\r\n"]}