{"version":3,"file":"user-notification-preference.service.d.ts","sources":["user-notification-preference.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../../auth/facade/auth.service';\r\nimport { NotificationPreference } from '../../model/notification-preference.model';\r\nimport { StateWithProcess } from '../../process/store/process-state';\r\nimport { StateWithUser } from '../store/user-state';\r\nexport declare class UserNotificationPreferenceService {\r\n    protected store: Store<StateWithUser | StateWithProcess<void>>;\r\n    protected authService: AuthService;\r\n    constructor(store: Store<StateWithUser | StateWithProcess<void>>, authService: AuthService);\r\n    /**\r\n     * Returns all notification preferences.\r\n     */\r\n    getPreferences(): Observable<NotificationPreference[]>;\r\n    /**\r\n     * Returns all enabled notification preferences.\r\n     */\r\n    getEnabledPreferences(): Observable<NotificationPreference[]>;\r\n    /**\r\n     * Loads all notification preferences.\r\n     */\r\n    loadPreferences(): void;\r\n    /**\r\n     * Clear all notification preferences.\r\n     */\r\n    clearPreferences(): void;\r\n    /**\r\n     * Returns a loading flag for notification preferences.\r\n     */\r\n    getPreferencesLoading(): Observable<boolean>;\r\n    /**\r\n     * Updating notification preferences.\r\n     * @param preferences a preference list\r\n     */\r\n    updatePreferences(preferences: NotificationPreference[]): void;\r\n    /**\r\n     * Returns a loading flag for updating preferences.\r\n     */\r\n    getUpdatePreferencesResultLoading(): Observable<boolean>;\r\n    /**\r\n     * Resets the update notification preferences process state. The state needs to be\r\n     * reset after the process concludes, regardless if it's a success or an error.\r\n     */\r\n    resetNotificationPreferences(): void;\r\n}\r\n"]}