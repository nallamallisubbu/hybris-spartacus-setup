{"version":3,"file":"customer-coupon.service.d.ts","sources":["customer-coupon.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../../auth/facade/auth.service';\r\nimport { CustomerCouponSearchResult } from '../../model/customer-coupon.model';\r\nimport { StateWithProcess } from '../../process/store/process-state';\r\nimport { StateWithUser } from '../store/user-state';\r\nexport declare class CustomerCouponService {\r\n    protected store: Store<StateWithUser | StateWithProcess<void>>;\r\n    protected authService: AuthService;\r\n    constructor(store: Store<StateWithUser | StateWithProcess<void>>, authService: AuthService);\r\n    /**\r\n     * Retrieves customer's coupons\r\n     * @param pageSize page size\r\n     * @param currentPage current page\r\n     * @param sort sort\r\n     */\r\n    loadCustomerCoupons(pageSize: number, currentPage?: number, sort?: string): void;\r\n    /**\r\n     * Returns customer coupon search result\r\n     * @param pageSize page size\r\n     */\r\n    getCustomerCoupons(pageSize: number): Observable<CustomerCouponSearchResult>;\r\n    /**\r\n     * Returns a loaded flag for customer coupons\r\n     */\r\n    getCustomerCouponsLoaded(): Observable<boolean>;\r\n    /**\r\n     * Returns a loading flag for customer coupons\r\n     */\r\n    getCustomerCouponsLoading(): Observable<boolean>;\r\n    /**\r\n     * Subscribe a CustomerCoupon Notification\r\n     * @param couponCode a customer coupon code\r\n     */\r\n    subscribeCustomerCoupon(couponCode: string): void;\r\n    /**\r\n     * Returns the subscribe customer coupon notification process loading flag\r\n     */\r\n    getSubscribeCustomerCouponResultLoading(): Observable<boolean>;\r\n    /**\r\n     * Returns the subscribe customer coupon notification process success flag\r\n     */\r\n    getSubscribeCustomerCouponResultSuccess(): Observable<boolean>;\r\n    /**\r\n     * Returns the subscribe customer coupon notification process error flag\r\n     */\r\n    getSubscribeCustomerCouponResultError(): Observable<boolean>;\r\n    /**\r\n     * Unsubscribe a CustomerCoupon Notification\r\n     * @param couponCode a customer coupon code\r\n     */\r\n    unsubscribeCustomerCoupon(couponCode: string): void;\r\n    /**\r\n     * Returns the unsubscribe customer coupon notification process loading flag\r\n     */\r\n    getUnsubscribeCustomerCouponResultLoading(): Observable<boolean>;\r\n    /**\r\n     * Returns the unsubscribe customer coupon notification process success flag\r\n     */\r\n    getUnsubscribeCustomerCouponResultSuccess(): Observable<boolean>;\r\n    /**\r\n     * Returns the unsubscribe customer coupon notification process error flag\r\n     */\r\n    getUnsubscribeCustomerCouponResultError(): Observable<boolean>;\r\n    /**\r\n     * Claim a CustomerCoupon\r\n     * @param couponCode a customer coupon code\r\n     */\r\n    claimCustomerCoupon(couponCode: string): void;\r\n    /**\r\n     * Returns the claim customer coupon notification process success flag\r\n     */\r\n    getClaimCustomerCouponResultSuccess(): Observable<boolean>;\r\n    /**\r\n     * Returns the claim customer coupon notification process loading flag\r\n     */\r\n    getClaimCustomerCouponResultLoading(): Observable<boolean>;\r\n}\r\n"]}