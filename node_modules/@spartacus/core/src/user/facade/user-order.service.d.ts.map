{"version":3,"file":"user-order.service.d.ts","sources":["user-order.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../../auth/facade/auth.service';\r\nimport { ConsignmentTracking } from '../../model/consignment-tracking.model';\r\nimport { CancellationRequestEntryInputList, Order, OrderHistoryList } from '../../model/order.model';\r\nimport { StateWithProcess } from '../../process/store/process-state';\r\nimport { StateWithUser } from '../store/user-state';\r\nexport declare class UserOrderService {\r\n    protected store: Store<StateWithUser | StateWithProcess<void>>;\r\n    protected authService: AuthService;\r\n    constructor(store: Store<StateWithUser | StateWithProcess<void>>, authService: AuthService);\r\n    /**\r\n     * Returns an order's detail\r\n     */\r\n    getOrderDetails(): Observable<Order>;\r\n    /**\r\n     * Retrieves order's details\r\n     *\r\n     * @param orderCode an order code\r\n     */\r\n    loadOrderDetails(orderCode: string): void;\r\n    /**\r\n     * Clears order's details\r\n     */\r\n    clearOrderDetails(): void;\r\n    /**\r\n     * Returns order history list\r\n     */\r\n    getOrderHistoryList(pageSize: number): Observable<OrderHistoryList>;\r\n    /**\r\n     * Returns a loaded flag for order history list\r\n     */\r\n    getOrderHistoryListLoaded(): Observable<boolean>;\r\n    /**\r\n     * Retrieves an order list\r\n     * @param pageSize page size\r\n     * @param currentPage current page\r\n     * @param sort sort\r\n     */\r\n    loadOrderList(pageSize: number, currentPage?: number, sort?: string): void;\r\n    /**\r\n     * Cleaning order list\r\n     */\r\n    clearOrderList(): void;\r\n    /**\r\n     *  Returns a consignment tracking detail\r\n     */\r\n    getConsignmentTracking(): Observable<ConsignmentTracking>;\r\n    /**\r\n     * Retrieves consignment tracking details\r\n     * @param orderCode an order code\r\n     * @param consignmentCode a consignment code\r\n     */\r\n    loadConsignmentTracking(orderCode: string, consignmentCode: string): void;\r\n    /**\r\n     * Cleaning consignment tracking\r\n     */\r\n    clearConsignmentTracking(): void;\r\n    cancelOrder(orderCode: string, cancelRequestInput: CancellationRequestEntryInputList): void;\r\n    /**\r\n     * Returns the cancel order loading flag\r\n     */\r\n    getCancelOrderLoading(): Observable<boolean>;\r\n    /**\r\n     * Returns the cancel order success flag\r\n     */\r\n    getCancelOrderSuccess(): Observable<boolean>;\r\n    /**\r\n     * Resets the cancel order process flags\r\n     */\r\n    resetCancelOrderProcessState(): void;\r\n}\r\n"]}