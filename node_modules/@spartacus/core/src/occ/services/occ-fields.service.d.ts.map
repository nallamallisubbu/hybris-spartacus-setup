{"version":3,"file":"occ-fields.service.d.ts","sources":["occ-fields.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { ScopedData } from '../../model/scoped-data';\r\nimport { HttpClient } from '@angular/common/http';\r\nexport interface ScopedDataWithUrl {\r\n    /** Url (with fields) to load scoped data */\r\n    url?: string;\r\n    /** scoped data model */\r\n    scopedData: ScopedData<any>;\r\n}\r\n/**\r\n * Intermediate model to accommodate all data needed to perform occ fields optimizations\r\n * wrapping ScopedData with url and fields\r\n */\r\nexport interface OccFieldsModel extends ScopedDataWithUrl {\r\n    /** extracted fields object, used to extract data from broader model */\r\n    fields?: object;\r\n}\r\n/**\r\n * Grouped rest calls with optimal urls\r\n *\r\n * One url groups all scopes it covers with related occFieldsModels\r\n */\r\nexport interface OccOptimimalUrlGroups {\r\n    [optimalUrl: string]: {\r\n        [scope: string]: OccFieldsModel;\r\n    };\r\n}\r\n/**\r\n * Helper service for optimizing endpoint calls to occ backend\r\n */\r\nexport declare class OccFieldsService {\r\n    protected http: HttpClient;\r\n    constructor(http: HttpClient);\r\n    protected FIELDS_PARAM: string;\r\n    /**\r\n     * Merge similar occ endpoints calls by merging fields parameter\r\n     *\r\n     * We assume that different scopes are defined by different fields parameters,\r\n     * so we are grouping all requests with the same urls (except fields definition)\r\n     * and merging into one request with fields that will satisfy all separate ones.\r\n     *\r\n     * @param models\r\n     */\r\n    getOptimalUrlGroups(models: ScopedDataWithUrl[]): OccOptimimalUrlGroups;\r\n    /**\r\n     * Extract fields parameter from occ endpoint url\r\n     *\r\n     * @param urlWithFields\r\n     */\r\n    private splitFields;\r\n    /**\r\n     * Combine url with field parameters\r\n     *\r\n     * @param url\r\n     * @param fields\r\n     */\r\n    private getUrlWithFields;\r\n}\r\n"]}