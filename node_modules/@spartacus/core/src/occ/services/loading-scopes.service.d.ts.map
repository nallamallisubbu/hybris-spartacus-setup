{"version":3,"file":"loading-scopes.service.d.ts","sources":["loading-scopes.service.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { OccConfig } from '../config/occ-config';\r\nexport declare class LoadingScopesService {\r\n    protected config: OccConfig;\r\n    constructor(config: OccConfig);\r\n    /**\r\n     * Aims to expand scopes based on loading scopes config.\r\n     *\r\n     * I.e. if 'details' scope includes 'list' scope by configuration, it'll return ['details', 'list']\r\n     *\r\n     * If scope data overlaps with each other, the data should be merged in the order of scopes provided,\r\n     * i.e. the last scope is merged last, overwriting parts of the data already provided by preceding scope.\r\n     * It should apply also to implicit scopes (that are included by configuration).\r\n     *\r\n     * @param model\r\n     * @param scopes\r\n     */\r\n    expand(model: string, scopes: string[]): string[];\r\n    /**\r\n     * Return maxAge for product scope in milliseconds\r\n     *\r\n     * @param model\r\n     * @param scope\r\n     */\r\n    getMaxAge(model: string, scope: string): number;\r\n}\r\n"]}