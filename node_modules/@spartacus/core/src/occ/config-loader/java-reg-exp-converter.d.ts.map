{"version":3,"file":"java-reg-exp-converter.d.ts","sources":["java-reg-exp-converter.d.ts"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["export declare class JavaRegExpConverter {\r\n    /**\r\n     * Pattern that extracts modifiers from the Java regexp.\r\n     *\r\n     * Java regexps MAY start with ONE or MANY modifiers like `(?MODIFIERS)PATTERN`. Examples:\r\n     * - `(?i)` for Case Insensitive Mode: `(?i)PATTERN`\r\n     * - `(?u)` for Unicode-Aware Case Folding; `(?u)PATTERN`\r\n     * - or multiple combined:  `(?iu)PATTERN`\r\n     * - (more modifiers in the official Java docs https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html)\r\n     *\r\n     * This pattern extracts 3 parts from the input string, i.e. for `(?iu)PATTERN`:\r\n     *    1. original modifiers syntax, i.e. `(?iu)` (or undefined if no modifiers present)\r\n     *    2. extracted modifiers, i.e. `iu` (or undefined if no modifiers present)\r\n     *    3. the rest of the regexp, i.e. `PATTERN`\r\n     */\r\n    private readonly EXTRACT_JAVA_REGEXP_MODIFIERS;\r\n    /**\r\n     * Converts RegExp from Java syntax to Javascript, by recognizing Java regexp modifiers\r\n     * and converting them to the Javascript ones (i.e. case insensitive mode: `(?i)PATTERN` -> `/pattern/i`)\r\n     *\r\n     * **CAUTION!** Not all features and modifiers of Java regexps are valid in Javascript!\r\n     * If unsupported feature or modifier is used, then `null` will be returned instead of Javascript RegExp.\r\n     *\r\n     * See differences between Java and Javascript regexps:\r\n     * - https://stackoverflow.com/questions/8754444/convert-javascript-regular-expression-to-java-syntax\r\n     * - https://en.wikipedia.org/wiki/Comparison_of_regular_expression_engines#Language_features\r\n     */\r\n    toJsRegExp(javaSyntax: string): RegExp;\r\n}\r\n"]}