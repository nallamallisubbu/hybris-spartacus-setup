{"version":3,"file":"auth-redirect.service.d.ts","sources":["auth-redirect.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Router } from '@angular/router';\r\nimport { RoutingService } from '../../routing/facade/routing.service';\r\nexport declare class AuthRedirectService {\r\n    private routing;\r\n    private router;\r\n    /**\r\n     * This service is responsible for redirecting to the last page before authorization. \"The last page\" can be:\r\n     * 1. Just the previously opened page; or\r\n     * 2. The page that we just tried to open, but AuthGuard cancelled it\r\n     *\r\n     * For example:\r\n     * 1. The user opens the product page, then clicks /login link and signs in\r\n     *    -> Then we should redirect to the product page; or\r\n     * 2. The user opens the product page, then he clicks /my-account link,\r\n     *    but is automatically redirected to the login page by the AuthGuard, and he signs in\r\n     *    -> Then we should redirect to the my-account page, not the product page\r\n     */\r\n    constructor(routing: RoutingService, router: Router);\r\n    private redirectUrl;\r\n    private ignoredUrls;\r\n    private lastAuthGuardNavigation;\r\n    redirect(): void;\r\n    reportAuthGuard(): void;\r\n    reportNotAuthGuard(): void;\r\n    private getCurrentNavigation;\r\n}\r\n"]}