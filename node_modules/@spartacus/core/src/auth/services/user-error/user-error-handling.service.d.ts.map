{"version":3,"file":"user-error-handling.service.d.ts","sources":["user-error-handling.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { RoutingService } from '../../../routing/facade/routing.service';\r\nimport { AuthService } from '../../facade/auth.service';\r\nimport { UserToken } from '../../models/token-types.model';\r\nexport declare class UserErrorHandlingService {\r\n    protected authService: AuthService;\r\n    protected routingService: RoutingService;\r\n    constructor(authService: AuthService, routingService: RoutingService);\r\n    handleExpiredUserToken(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<UserToken>>;\r\n    handleExpiredRefreshToken(): void;\r\n    protected handleExpiredToken(): Observable<UserToken>;\r\n    protected createNewRequestWithNewToken(request: HttpRequest<any>, token: UserToken): HttpRequest<any>;\r\n}\r\n"]}