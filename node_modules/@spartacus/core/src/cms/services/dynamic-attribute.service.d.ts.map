{"version":3,"file":"dynamic-attribute.service.d.ts","sources":["dynamic-attribute.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Renderer2 } from '@angular/core';\r\nimport { SmartEditService } from '../../smart-edit/services/smart-edit.service';\r\nimport { ContentSlotComponentData } from '../model/content-slot-component-data.model';\r\nimport { ContentSlotData } from '../model/content-slot-data.model';\r\nexport declare class DynamicAttributeService {\r\n    protected smartEditService: SmartEditService;\r\n    constructor(smartEditService: SmartEditService);\r\n    /**\r\n     * Add dynamic attributes to DOM. These attributes are extracted from the properties of cms items received from backend.\r\n     * There can by many different groups of properties, one of them is smartedit. But EC allows addons to create different groups.\r\n     * For example, personalization may add 'script' group etc.\r\n     * @param element: slot or cms component element\r\n     * @param renderer\r\n     * @param cmsRenderingContext: an object containing properties in each cms item response data\r\n     */\r\n    addDynamicAttributes(element: Element, renderer: Renderer2, cmsRenderingContext: {\r\n        componentData?: ContentSlotComponentData;\r\n        slotData?: ContentSlotData;\r\n    }): void;\r\n}\r\n"]}