{"version":3,"file":"unknown-error.handler.d.ts","sources":["unknown-error.handler.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { HttpResponseStatus } from '../../../models/response-status.model';\r\nimport { HttpErrorHandler } from '../http-error.handler';\r\nimport { Priority } from '../../../../util/applicable';\r\n/**\r\n * Unknown Error Handler works as an fallback, to handle errors that were\r\n * not handled by any other error handlers\r\n */\r\nexport declare class UnknownErrorHandler extends HttpErrorHandler {\r\n    responseStatus: HttpResponseStatus;\r\n    /**\r\n     * hasMatch always returns true, to mach all errors\r\n     */\r\n    hasMatch(_errorResponse: any): boolean;\r\n    handleError(): void;\r\n    /**\r\n     * Fallback priority assures that the handler is used as a last resort\r\n     */\r\n    getPriority(): Priority;\r\n}\r\n"]}