{"version":3,"file":"unauthorized.handler.d.ts","sources":["unauthorized.handler.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { HttpErrorResponse, HttpRequest } from '@angular/common/http';\r\nimport { GlobalMessageService } from '../../../facade/global-message.service';\r\nimport { HttpResponseStatus } from '../../../models/response-status.model';\r\nimport { HttpErrorHandler } from './../http-error.handler';\r\nimport { Priority } from '../../../../util/applicable';\r\n/**\r\n * Handles Oauth client errors when a 401 is returned. This is the case for failing\r\n * authenticaton requests to OCC.\r\n */\r\nexport declare class UnauthorizedErrorHandler extends HttpErrorHandler {\r\n    protected globalMessageService: GlobalMessageService;\r\n    responseStatus: HttpResponseStatus;\r\n    constructor(globalMessageService: GlobalMessageService);\r\n    handleError(_request: HttpRequest<any>, response: HttpErrorResponse): void;\r\n    getPriority(): Priority;\r\n}\r\n"]}