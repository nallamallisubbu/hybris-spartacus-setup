{"version":3,"file":"http-error.interceptor.d.ts","sources":["http-error.interceptor.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpErrorHandler } from './handlers/http-error.handler';\r\nexport declare class HttpErrorInterceptor implements HttpInterceptor {\r\n    protected handlers: HttpErrorHandler[];\r\n    constructor(handlers: HttpErrorHandler[]);\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;\r\n    protected handleErrorResponse(request: HttpRequest<any>, response: HttpErrorResponse): void;\r\n    /**\r\n     * return the error handler that matches the `HttpResponseStatus` code.\r\n     * If no handler is available, the UNKNOWN handler is returned.\r\n     */\r\n    protected getResponseHandler(response: HttpErrorResponse): HttpErrorHandler;\r\n}\r\n"]}